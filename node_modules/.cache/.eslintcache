[{"/Users/himanshuagarwal/Projects/invoicer/src/index.js":"1","/Users/himanshuagarwal/Projects/invoicer/src/App.js":"2","/Users/himanshuagarwal/Projects/invoicer/src/components/Table.js":"3","/Users/himanshuagarwal/Projects/invoicer/src/components/Dates.js":"4","/Users/himanshuagarwal/Projects/invoicer/src/components/Footer.js":"5","/Users/himanshuagarwal/Projects/invoicer/src/components/Header.js":"6","/Users/himanshuagarwal/Projects/invoicer/src/components/Notes.js":"7","/Users/himanshuagarwal/Projects/invoicer/src/components/ClientDetails.js":"8","/Users/himanshuagarwal/Projects/invoicer/src/components/TableForm.js":"9"},{"size":211,"mtime":1658883375196,"results":"10","hashOfConfig":"11"},{"size":8025,"mtime":1658883375195,"results":"12","hashOfConfig":"11"},{"size":1100,"mtime":1658883375196,"results":"13","hashOfConfig":"11"},{"size":548,"mtime":1658883375195,"results":"14","hashOfConfig":"11"},{"size":321,"mtime":1658883375195,"results":"15","hashOfConfig":"11"},{"size":1758,"mtime":1658883375195,"results":"16","hashOfConfig":"11"},{"size":221,"mtime":1658883375196,"results":"17","hashOfConfig":"11"},{"size":1003,"mtime":1658883375195,"results":"18","hashOfConfig":"11"},{"size":5995,"mtime":1658883375196,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2zc6s4",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/himanshuagarwal/Projects/invoicer/src/index.js",[],[],"/Users/himanshuagarwal/Projects/invoicer/src/App.js",["48"],[],"import { useState, useRef, useEffect } from 'react';\nimport Header from './components/Header.js';\nimport Notes from './components/Notes.js';\nimport Footer from './components/Footer.js';\nimport Table from './components/Table.js';\nimport ClientDetails from './components/ClientDetails.js';\nimport Dates from './components/Dates.js';\nimport TableForm from './components/TableForm.js';\nimport ReactToPrint from 'react-to-print';\n\nfunction App() {\n  const [showInvoice, setShowInvoice] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [address, setAddress] = useState(\"\")\n  const [phone, setPhone] = useState(\"\")\n  const [invoiceNumber, setInvoiceNumber] = useState(localStorage.getItem(\"fixedInvoiceNumber\"))\n  const [admissionDate, setAdmissionDate] = useState(\"\")\n  const [dischargeDate, setDischargeDate] = useState(\"\")\n  const [doctorName, setDoctorName] = useState(\"Dr. Shafali Agarwal\")\n  const [notes, setNotes] = useState(\"\")\n  const [description, setDescription] = useState(\"Room Rent (Per Day)\")\n  const [quantity, setQuantity] = useState(\"\")\n  const [price, setPrice] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n  const [list, setList] = useState([])\n  const [total, setTotal] = useState(0)\n\n  const componentRef = useRef()\n\n  useEffect(() => {\n    let temporaryInvoiceNumber = localStorage.getItem(\"fixedInvoiceNumber\");\n    temporaryInvoiceNumber++;\n    localStorage.setItem(\"fixedInvoiceNumber\", temporaryInvoiceNumber);\n  }, [])\n\n  return (\n    <>\n      <main className='m-5 p-5 md:max-w-xl md:mx-auto lg:max-w-2xl xl:max-w-4xl bg-white ronded shadow'>\n      {showInvoice ?  (\n        <>\n          <ReactToPrint \n            trigger={() => <button\n                            className='ml-5 bg-blue-500 text-white font-bold py-2 px-8 rounded shadow border-2 border-blue-500 hover:bg-transparent hover:text-blue-500 transition-all duration-300'\n                          >\n                              Print/Download\n                            </button>} \n            content ={() => componentRef.current}\n          />\n          <div ref={componentRef} className='p-5'>\n\n            <Header/>\n\n            <Dates invoiceNumber={invoiceNumber} />\n\n            <ClientDetails name={name} address={address} admissionDate={admissionDate} dischargeDate={dischargeDate} doctorName={doctorName} />\n\n            <Table list={list} total = {total} />\n\n            <Notes notes={notes}/>\n\n            <Footer \n              name={name} \n              phone={phone}\n            />\n            </div> \n\n            <button \n              onClick={() => setShowInvoice(false)}\n              className='mt-5 bg-blue-500 text-white font-bold py-2 px-8 rounded shadow border-2 border-blue-500 hover:bg-transparent hover:text-blue-500 transition-all duration-300'> \n              Edit Information\n            </button>\n\n            </>\n          ): (\n            <>\n            {/* name, address, email, phone, bank name, bank account number, client name, client address, invoice number, invoice date, due date, notes */}\n            <div className='flex flex-col justify-center'>\n\n              <article className='md:grid grid-cols-2 gap-10'>\n                <div className='flex flex-col'>\n                  <label htmlFor='name'>Enter Patient's Name</label>\n                  <input \n                    type ='text' \n                    name='text' \n                    id='name' \n                    placeholder=\"Patient's Name\" \n                    autoComplete='off'\n                    value = {name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n\n                <div className='flex flex-col'>\n                  <label htmlFor='phone'>Enter phone number</label>\n                  <input \n                    type ='text' \n                    name='phone' \n                    id='phone' \n                    placeholder='Phone Number' \n                    autoComplete='off'\n                    value = {phone}\n                    onChange={(e) => {\n                      return setPhone(e.target.value);\n                    }}\n                  />\n                </div>\n              </article>\n\n              <div className='flex flex-col'>\n                  <label htmlFor='address'>Enter Address</label>\n                  <input \n                    type ='text' \n                    name='text' \n                    id='address' \n                    placeholder='Address' \n                    autoComplete='off'\n                    value = {address}\n                    onChange={(e) => setAddress(e.target.value)}\n                  />\n                </div>\n\n              <article className='md:grid grid-cols-2 gap-10'>\n\n                <div className='flex flex-col'>\n                  <label htmlFor='admissionDate'>Enter date of admission</label>\n                  <input \n                    type ='date' \n                    name='admissionDate' \n                    id='admissionDate' \n                    placeholder=\"date of admission\" \n                    autoComplete='off'\n                    value = {admissionDate}\n                    onChange={(e) => {\n                      return setAdmissionDate(e.target.value);\n                    }}\n                  />\n                </div>\n\n                <div className='flex flex-col'>\n                  <label htmlFor='dischargeDate'>Enter date of discharge</label>\n                  <input \n                    type ='date' \n                    name='dischargeDate' \n                    id='dischargeDate' \n                    placeholder=\"discharge date\" \n                    autoComplete='off'\n                    value = {dischargeDate}\n                    onChange={(e) => {\n                      return setDischargeDate(e.target.value);\n                    }}\n                  />\n                </div>\n              </article>\n\n              <div className='flex flex-col'>\n                  <label htmlFor='doctorName'>Enter name of Doctor In-Charge</label>\n                  <select \n                    type ='text' \n                    name='doctorName' \n                    id='doctorName' \n                    placeholder=\"Doctor's Name\" \n                    autoComplete='off'\n                    value = {doctorName}\n                    onChange={(e) => {\n                      return setDoctorName(e.target.value);\n                    }}\n                  >\n                    <option value=\"Dr. Shafali Agarwal\">Dr. Shafali Agarwal</option>\n                    <option value=\"Dr. Vivek Agarwal\">Dr. Vivek Agarwal</option>\n                  </select>\n                </div>\n\n              {/* Table Form*/}\n              <article>\n                <TableForm \n                  description={description} setDescription={setDescription}\n                  quantity={quantity} setQuantity={setQuantity}\n                  price={price} setPrice={setPrice}\n                  amount={amount} setAmount={setAmount}\n                  list={list} setList={setList}\n                  total = {total} setTotal={setTotal}\n                />\n              </article>\n\n              <label htmlFor='notes'>Additional Notes</label>\n              <textarea \n                name = 'notes'\n                id='notes'\n                cols='30'\n                rows='10'\n                placeholder='Additonal Notes to the client'\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              ></textarea>\n            \n              <button onClick = { \n                () => setShowInvoice(true)\n                } \n                className='bg-blue-500 text-white \n                font-bold py-2 px-8 rounded shadow border-2 \n                border-blue-500 hover:bg-transparent hover:text-blue-500 \n                transition-all duration-300'>\n                Preview Invoice\n              </button>\n          \n            </div>\n            </>\n        \n      )}\n\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","/Users/himanshuagarwal/Projects/invoicer/src/components/Table.js",[],[],"/Users/himanshuagarwal/Projects/invoicer/src/components/Dates.js",[],[],"/Users/himanshuagarwal/Projects/invoicer/src/components/Footer.js",[],[],"/Users/himanshuagarwal/Projects/invoicer/src/components/Header.js",[],[],"/Users/himanshuagarwal/Projects/invoicer/src/components/Notes.js",[],[],"/Users/himanshuagarwal/Projects/invoicer/src/components/ClientDetails.js",[],[],"/Users/himanshuagarwal/Projects/invoicer/src/components/TableForm.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":16,"column":25,"nodeType":"51","messageId":"52","endLine":16,"endColumn":41},"no-unused-vars","'setInvoiceNumber' is assigned a value but never used.","Identifier","unusedVar"]